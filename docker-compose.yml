services:
  conduktor-console:
    image: conduktor/conduktor-console:1.28.0
    depends_on:
      - postgresql
      # - redpanda-0
      - kafka1
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_ADMIN_EMAIL: "admin@conduktor.io"
      CDK_ADMIN_PASSWORD: "adminP4ss!"
      CDK_DATABASE_URL: "postgresql://conduktor:change_me@postgresql:5432/conduktor-platform"
      CDK_CLUSTERS_0_ID: "local-confluent"
      CDK_CLUSTERS_0_NAME: "local-confluent"
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092"
      CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://schema-registry:8084"
      CDK_CLUSTERS_0_ICON: "kafka"
      CDK_CLUSTERS_0_COLOR: "#6A57C8"
      CDK_CLUSTERS_1_ID: "local-redpanda"
      CDK_CLUSTERS_1_NAME: "local-redpanda"
      CDK_CLUSTERS_1_BOOTSTRAPSERVERS: "redpanda-0:9092"
      CDK_CLUSTERS_1_SCHEMAREGISTRY_URL: "http://redpanda-0:18081"
      CDK_CLUSTERS_1_COLOR: "#6A57C8"
      CDK_CLUSTERS_1_ICON: "elephant"

      CDK_MONITORING_CORTEX-URL: http://conduktor-monitoring:9009/
      CDK_MONITORING_ALERT-MANAGER-URL: http://conduktor-monitoring:9010/
      CDK_MONITORING_CALLBACK-URL: http://conduktor-platform:8080/monitoring/api/
      CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL: http://localhost:8080

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2801
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -zv 0.0.0.0 2801 || exit 1
      interval: 5s
      retries: 25
  kafka1:
    hostname: kafka1
    container_name: kafka1
    image: confluentinc/cp-kafka:7.4.1
    ports:
    - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2801
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL_SAME_HOST://:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL_SAME_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: kafka.authorizer.logger=INFO
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -zv kafka1 9092 || exit 1
      interval: 5s
      retries: 25

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
    - 8084:8084
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092 #,kafka2:9093,kafka3:9094
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8084
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - type: bind
      source: .
      target: /clientConfig
      read_only: true
    depends_on:
      kafka1:
        condition: service_healthy
    healthcheck:
      test: nc -zv schema-registry 8084 || exit 1
      interval: 5s
      retries: 25

  # kafka-1:
  #   image: apache/kafka-native:latest
  #   ports:
  #     - 9092:9092
  #   # volumes:
  #   # - kafka1:volumes:/var/lib/redpanda/data

  # redpanda-0:
  #   command:
  #     - redpanda
  #     - start
  #     - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
  #     - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
  #     - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
  #     # Address the broker advertises to clients that connect to the HTTP Proxy.
  #     - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
  #     - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
  #     # Redpanda brokers use the RPC API to communicate with eachother internally.
  #     - --rpc-addr redpanda-0:33145
  #     - --advertise-rpc-addr redpanda-0:33145
  #     - --smp 1
  #     - --memory 1G
  #     - --mode dev-container
  #     - --default-log-level=info
  #   image: docker.redpanda.com/redpandadata/redpanda:v23.1.11
  #   container_name: redpanda-0
  #   volumes:
  #     - redpanda-0:/var/lib/redpanda/data
  #   ports:
  #     - 18081:18081
  #     - 18082:18082
  #     - 19092:19092
  #     - 19644:9644
  #   healthcheck:
  #     test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
  #     interval: 15s
  #     timeout: 3s
  #     retries: 5
  #     start_period: 5s
  
  postgresql:
    image: postgres:14
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_DB: "conduktor-platform"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

  # Monitoring tool from Conduktor
  conduktor-monitoring:
    image: conduktor/conduktor-console-cortex:1.28.0
    environment:
      CDK_CONSOLE-URL: "http://conduktor-platform:8080"

  data-generator:
    # my data generator
    image: stuzanne/kafka-data-generator:0.5
    # restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092
      # MAX_BATCHES:
      # MESSAGE_DELAY_SECONDS: 2 # 2 default
      # TOPICS: customers,pizza-orders,products
    depends_on:
      # - redpanda-0
      - kafka1

volumes:
  pg_data: {}
  conduktor_data: {}
  redpanda-0: {}
  kafka1: {}