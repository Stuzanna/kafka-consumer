services:
  conduktor-console:
    # image: conduktor/conduktor-console:1.28.0
    image: harbor.cdkt.dev/conduktor/conduktor-console:1.28.0-rc1
    container_name: conduktor-console
    depends_on:
      - postgresql
      - kafka1
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_LICENSE: ${CDK_LICENSE:-}
      CDK_DATABASE_URL: "postgresql://conduktor:change_me@postgresql:5432/conduktor-platform"
      CDK_ADMIN_EMAIL: "admin@conduktor.io"
      CDK_ADMIN_PASSWORD: "adminP@ss!"
      CDK_AUTH_LOCAL-USERS_0_EMAIL: "alice@conduktor.io"
      CDK_AUTH_LOCAL-USERS_0_PASSWORD: "aliceP@ss!"
      CDK_AUTH_LOCAL-USERS_1_EMAIL: "bob@conduktor.io"
      CDK_AUTH_LOCAL-USERS_1_PASSWORD: "bobP@ss!"
      CDK_ORGANIZATION_NAME: "conduktor"
      CDK_CLUSTERS_0_ID: "prod-cluster"
      CDK_CLUSTERS_0_NAME: "prod-cluster"
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "redpanda-0:9095"
      CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://redpanda-0:8081"
      CDK_CLUSTERS_0_KAFKACONNECTS_0_ID: "kafka-connect"
      CDK_CLUSTERS_0_KAFKACONNECTS_0_NAME: "kafka-connect"
      CDK_CLUSTERS_0_KAFKACONNECTS_0_URL: "http://kafka-connect:8083"
      CDK_CLUSTERS_0_COLOR: "#6A57C8"
      CDK_CLUSTERS_0_ICON: "kafka"
      CDK_CLUSTERS_1_ID: "dev-cluster"
      CDK_CLUSTERS_1_NAME: "dev-cluster"
      CDK_CLUSTERS_1_BOOTSTRAPSERVERS: "kafka1:9092"
      CDK_CLUSTERS_1_SCHEMAREGISTRY_URL: "http://schema-registry:8084"
      CDK_CLUSTERS_1_ICON: "elephant"
      CDK_CLUSTERS_1_COLOR: "#6A57C8"
      CDK_CLUSTERS_2_ID: "cdk-gateway"
      CDK_CLUSTERS_2_NAME: "cdk-gateway"
      CDK_CLUSTERS_2_BOOTSTRAPSERVERS: "conduktor-gateway:6969"
      CDK_CLUSTERS_2_SCHEMAREGISTRY_URL: "http://redpanda-0:8081"
      CDK_CLUSTERS_2_KAFKAFLAVOR_URL: "http://conduktor-gateway:8888"
      CDK_CLUSTERS_2_KAFKACONNECTS_0_ID: "kafka-connect"
      CDK_CLUSTERS_2_KAFKACONNECTS_0_NAME: "kafka-connect"
      CDK_CLUSTERS_2_KAFKACONNECTS_0_URL: "http://kafka-connect:8083"
      CDK_CLUSTERS_2_KAFKAFLAVOR_USER: "admin"
      CDK_CLUSTERS_2_KAFKAFLAVOR_PASSWORD: "conduktor"
      CDK_CLUSTERS_2_KAFKAFLAVOR_VIRTUALCLUSTER: "passthrough"
      CDK_CLUSTERS_2_KAFKAFLAVOR_TYPE: "Gateway"
      CDK_CLUSTERS_2_COLOR: "#6A57C8"
      CDK_CLUSTERS_2_ICON: "dog"

      CDK_MONITORING_CORTEX-URL: http://conduktor-monitoring:9009/
      CDK_MONITORING_ALERT-MANAGER-URL: http://conduktor-monitoring:9010/
      CDK_MONITORING_CALLBACK-URL: http://conduktor-console:8080/monitoring/api/
      CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL: http://localhost:8080
  
  conduktor-gateway:
    image: conduktor/conduktor-gateway:3.3.1
    hostname: conduktor-gateway
    container_name: conduktor-gateway
    environment:
      KAFKA_BOOTSTRAP_SERVERS: redpanda-0:9095
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL_SAME_HOST://localhost:6969
    ports:
      - "8888:8888"
    healthcheck:
      test: curl localhost:8888/health
      interval: 5s
      retries: 25
    depends_on:
      kafka1:
        condition: service_healthy
  
  conduktor-ctl:
    image: conduktor/conduktor-ctl:v0.2.7
    container_name: conduktor-ctl
    entrypoint: sleep infinity # override entry point to keep container up
    volumes:
      - ./self-service:/self-service
    environment:
      CDK_BASE_URL: "http://conduktor-console:8080"
      CDK_API_KEY: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiIsImtpZCI6Imp3a18wIn0.eyJpc3MiOiJhdXRoZW50aWNhdG9yIiwic3ViIjoiYWRtaW5AY29uZHVrdG9yLmlvIiwiZXhwIjoxNzI4OTE0MTQ3LCJuYmYiOjE3Mjg2NTQ5NDcsImlhdCI6MTcyODY1NDk0NywiZW1haWwiOiJhZG1pbkBjb25kdWt0b3IuaW8iLCJodHRwczovL2NvbmR1a3Rvci5pby91c2VySWQiOiJjZWZhMmE4YTljNWEyZWM3MzY4YTQ1OTI2ZTk0NjFjMjg4MGIzZWNlYTNmM2IzYmQyNjAzOTViY2E4NTM4OTdhIiwiaHR0cHM6Ly9jb25kdWt0b3IuaW8vcGxhdGZvcm1GaW5nZXJwcmludCI6ImU3M2MyMTkwLTA4MTUtNTIwZS05NzgyLTgyYTEyZGVhNjNhYyJ9.S0CWklI0fstVUv71H6JAlPReO9RwOIOIMYao_otnRvu26tPNiiTW8U4PXbnVItZmh1GztiveUBK7xKM1JiAQI39Z3kdRZEckLy2W-QlZrGhd2FPwIJ3qiPB1tFX8jimuvvFSulS1LJbosIXAN_z-EyUVnof6OnutfVNb7Kf1csKmR19Ihzee521WfGESWlJBy0LC44fjaZdycRnxnSfCDl7qzK0cvcqyMSE2vIPRTuPOevmE0Z3WbG8bui9_wtCyKjDJgEYfPb9QsdGEpaNUfpti9QQw4P-dFZq9w-WVW3RBiNH1NuJVJOuJwMPXQMncI5QqLMT9-qwMRDhh92h5De7Dp-804rDDCtG0rWUMxtfZ8M4suB8lI3MTduFSgtlG9cmW7NHe_8RG8hrR2TrOTM-sv1njclzJHuWwLizJx2X47wPRWSt9w60Z8CnIlAy5_OZ3RGe-9IY3HMVOhnKkwdFJr7GBspEFRW6WIUOP8KfTzeKteaU7bLSWoFOOif5x
      CDK_GATEWAY_BASE_URL: http://localhost:8888
      CDK_GATEWAY_USER: admin
      CDK_GATEWAY_PASSWORD: conduktor
    depends_on:
      conduktor-console:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2801
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -zv 0.0.0.0 2801 || exit 1
      interval: 5s
      retries: 25
  kafka1:
    hostname: kafka1
    container_name: kafka1
    image: confluentinc/cp-kafka:7.4.1
    ports:
    - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2801
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL_SAME_HOST://:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL_SAME_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: kafka.authorizer.logger=INFO
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -zv kafka1 9092 || exit 1
      interval: 5s
      retries: 25

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
    - 8084:8084
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092 #,kafka2:9093,kafka3:9094
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8084
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - type: bind
      source: .
      target: /clientConfig
      read_only: true
    depends_on:
      kafka1:
        condition: service_healthy
    healthcheck:
      test: nc -zv schema-registry 8084 || exit 1
      interval: 5s
      retries: 25

  kafka-client:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka-client
    container_name: kafka-client
    command: sleep infinity

  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9095,external://0.0.0.0:19095
      - --advertise-kafka-addr internal://redpanda-0:9095,external://localhost:19095
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33146
      - --advertise-rpc-addr redpanda-0:33146
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.6
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    ports:
      # - 18083:18083
      - 18081:18081
      - 19095:19095
      - 19645:9645
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  postgresql:
    image: postgres:16
    hostname: postgresql
    container_name: postgresql
    ports:
      - "5444:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_DB: "conduktor-platform"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    
  conduktor-monitoring:
    # image: conduktor/conduktor-console-cortex:1.28.0
    image: harbor.cdkt.dev/conduktor/conduktor-console-cortex:1.28.0-rc1
    container_name: monitoring
    environment:
      CDK_CONSOLE-URL: "http://conduktor-console:8080"

  conduktor-data-generator:
    image: conduktor/conduktor-data-generator:0.6
    container_name: conduktor-data-generator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: conduktor-gateway:6969
      KAFKA_SCHEMA_REGISTRY_URL: http://redpanda-0:8081
      GATEWAY_ADMIN_API: http://conduktor-gateway:8888
    restart: on-failure
    depends_on:
      redpanda-0:
        condition: service_healthy
      conduktor-gateway:
        condition: service_healthy
  
  stu-data-generator-pizza-orders:
    image: stuzanne/kafka-data-generator:0.5
    container_name: data-gen
    environment:
      # MAX_BATCHES: 
      KAFKA_BOOTSTRAP_SERVERS: redpanda-0:9095
      MESSAGE_DELAY_SECONDS: 2
      TOPICS: pizza-orders
    depends_on:
      redpanda-0:
        condition: service_healthy
    restart: always
  
  stu-slow-consumer-group:
    image: stuzanne/kafka-consumer-demo:0.1
    container_name: slow-consumer
    depends_on:
      redpanda-0:
        condition: service_healthy
    restart: always

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.3.2
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "redpanda-0:9095"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components'
    volumes:
      - ./connectors:/etc/kafka-connect/jars/
      - ./plugins:/usr/share/confluent-hub-components

    depends_on:
      - redpanda-0
      - kafka1
    command:
      - bash
      - -c
      - |
        # confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest # volume mapped instead for offline start
        # confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.4.0 # volume mapped instead for offline start
        /etc/confluent/docker/run

volumes:
  pg_data: {}
  conduktor_data: {}
  sr-0: {}
  redpanda-0: {}
